https://school.programmers.co.kr/learn/courses/30/lessons/72410

import java.util.*;
class Solution {
    public String solution(String new_id) {
        String str = new_id;

        // 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
        str = str.toLowerCase();

        //2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
        for(int i = 0; i < new_id.length(); i++) {
            if(check(new_id.charAt(i)) == -1)
               str = str.replace(new_id.charAt(i) + "", "");
        }

        //3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다. 
        int cnt = 0;
        for(int i = 0; i < str.length(); i++) {
            if(cnt > 0) {
                cnt = 0;
            }
            while(check(str.charAt(i)) == 3 ){
                if(i == str.length() - 1){
                    cnt++;
                    break;
                }
                i += 1;
                cnt++;
            }
            if(cnt >= 2){
                String arb = ".".repeat(cnt);
                str = str.replace(arb, ".");
                i = i - 1 - (cnt - 1);
            }
        }

        //4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
        //5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
        if(str.length() == 0)
            str += 'a';
        else if(str.charAt(0) == '.') {
            str = str.substring(1, str.length());
        }       
        if(str.length() == 0)
            str += 'a';
        else if(str.charAt(str.length() - 1) == '.')
            str = str.substring(0, str.length() - 1);

        //6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
        //만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
        if(str.length() >= 16) {
            str = str.substring(0, 15);
            if(str.charAt(str.length() - 1) == '.')
            str = str.substring(0, str.length() - 1);
        }

        //7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.
        if(str.length() <= 2) {
            char ch = str.charAt(str.length() - 1);
            while(str.length() <= 2)
                str += ch;
        }

        return str;
    }

    int check(char ch) {
        if(ch >= 'a' && ch <= 'z')
            return 0;
        else if(ch >= '0' && ch <= '9')
            return 5;
        switch(ch) {
            case '-':
                return 1;
            case '_':
                return 2;
            case '.':
                return 3;
        }
        return -1;
    }
}
