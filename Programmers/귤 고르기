https://school.programmers.co.kr/learn/courses/30/lessons/138476

import java.util.*;

class Solution {
    public int solution(int k, int[] tangerine) {
        int answer = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        // Arrays.sort(tangerine);
        for (int n : tangerine)
            map.put(n, map.getOrDefault(n, 0) + 1);
        PriorityQueue<Integer[]> pq = new PriorityQueue<>((a, b) -> {
            return a[1] - b[1];
        });

        for (int key : map.keySet())
            pq.add(new Integer[]{key, map.get(key)});

        answer = tangerine.length;

        while(answer > k) {
            Integer[] val = pq.poll();
            answer -= val[1];
        }
        if (pq.size() == 0 && answer != k) return 1;
        else if(answer != k) return pq.size() + 1;
        return pq.size();
    }
}