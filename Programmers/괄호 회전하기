https://school.programmers.co.kr/learn/courses/30/lessons/76502

import java.util.*;

class Solution {
    public int solution(String s) {
        int answer = 0;

        Stack<Character> stack = new Stack<>();
        Queue<Character> q = new LinkedList<>();

        for (char ch : s.toCharArray())
            q.add(ch);
        for (int i = 0; i < s.length(); i++) {
            for (int k = 0; k < q.size(); k++) {
                char ch = q.poll();
                switch(ch) {
                    case '[':
                        stack.push(ch);
                        break;
                    case ']':
                        if (stack.isEmpty()) stack.push(ch);
                        if (stack.peek() == '[')
                            stack.pop();
                        else stack.push(ch);
                        break;
                    case '(':
                        stack.push(ch);
                        break;
                    case ')':
                        if (stack.isEmpty()) stack.push(ch);
                        if (stack.peek() == '(')
                            stack.pop();
                        else stack.push(ch);
                        break;
                    case '{':
                        stack.push(ch);
                        break;
                    case '}':
                        if (stack.isEmpty()) stack.push(ch);
                        if (stack.peek() == '{')
                            stack.pop();
                        else stack.push(ch);
                        break;
                }
                q.add(ch);
            }
            if (stack.isEmpty()) answer++;
            else stack.clear();
            q.add(q.poll());
        }
        return answer;
    }
}