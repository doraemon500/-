https://www.acmicpc.net/problem/2531

import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static StringTokenizer st;
    //    static List<Character> vowels = Arrays.asList('a', 'e', 'i', 'o', 'u');
    static long max = 0;
    static long min = Long.MAX_VALUE;
    static int N, m;
    static StringBuilder sb;

    public static void main(String[] args) throws IOException {
        st = new StringTokenizer(br.readLine());
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = Integer.parseInt(st.nextToken());
        }
        int[] val = new int[arr[0] * 2];
        for (int i = 0; i < arr[0]; i++) {
            val[i] = Integer.parseInt(br.readLine());
        }
        for (int i = arr[0]; i < arr[0] * 2; i++) {
            val[i] = val[i - arr[0]];
        }

        HashMap<Integer, Integer> map = new HashMap<>();
        int left = 0;
        int right = 0;
        int max = 0;

        while (left < val.length) {
            if (right - left > arr[2] || right == val.length) {
                map.put(val[left], map.get(val[left]) - 1);
                if (map.get(val[left]) == 0) map.remove(val[left]);
                left++;
            } else if (right - left <= arr[2]) {
                map.put(val[right], map.getOrDefault(val[right], 0) + 1);
                right++;
            }

            int cnt = 0;
            for (Integer key : map.keySet()) {
                cnt += map.get(key);
            }
            if (cnt == arr[2]) {
                int size = map.size();
                if (!map.containsKey(arr[3])) size++;
                max = Math.max(max, size);
            }
        }


        sb = new StringBuilder();
        sb.append(max);
        bw.write(sb.toString());
        bw.close();
        br.close();
    }
}